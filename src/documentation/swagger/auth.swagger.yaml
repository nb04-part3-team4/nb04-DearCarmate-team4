tags:
  - name: Auth
    description: 인증 (로그인/로그아웃/토큰) 관련 API

paths:
  /auth/login:
    post:
      summary: 로그인
      tags: [Auth]
      description: 이메일과 비밀번호로 로그인하고 Access/Refresh 토큰을 발급받습니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse_Login'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 실패 (이메일 또는 비밀번호 오류)

  /auth/logout:
    post:
      summary: 로그아웃
      tags: [Auth]
      description: 서버에 저장된 리프레시 토큰을 무효화합니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 로그아웃 성공
        '401':
          description: 인증 실패

  /auth/refresh:
    post:
      summary: 토큰 재발급
      tags: [Auth]
      description: 유효한 Refresh Token으로 새로운 Access/Refresh 토큰을 발급받습니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse_RefreshToken'
        '401':
          description: 유효하지 않은 리프레시 토큰

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: password123

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'