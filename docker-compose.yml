version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: project_2_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-project_2}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-project_2}
      POSTGRES_DB: ${POSTGRES_DB:-project_2}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project_2_backend
    restart: unless-stopped
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-project_2}:${POSTGRES_PASSWORD:-project_2}@postgres:5432/${POSTGRES_DB:-project_2}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    depends_on:
      - postgres
    networks:
      - app_network
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
